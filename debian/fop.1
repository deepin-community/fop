.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.14.
.TH FOP "1" "July 2020" "fop Version 2.5" "User Commands"
.SH NAME

fop \- Command line wrapper for the java version of fop.
.SH DESCRIPTION
Apache FOP (Formatting Objects Processor) is a print formatter driven by XSL
formatting objects (XSL-FO) and an output independent formatter. It is a Java
application that reads a formatting object (FO) tree and renders the resulting
pages to a specified output. Output formats currently supported include PDF,
PS, PCL, AFP, XML (area tree representation), Print, AWT and PNG, and to a
lesser extent, RTF and TXT. The primary output target is PDF.
.PP
.SH SYNOPSIS

fop [options] [\-fo|\-xml] infile [\-xsl file] [\-awt|\-pdf|\-mif|\-rtf|\-tiff|\-png|\-pcl|\-ps|\-txt|\-at [mime]|\-print] <outfile>
.IP
.SH OPTIONS
.TP
\fB\-version\fR
print FOP version and exit
.TP
\fB\-x\fR
dump configuration settings
.TP
\fB\-c\fR cfg.xml
use additional configuration file cfg.xml
.TP
\fB\-l\fR lang
the language to use for user information
.TP
\fB\-nocs\fR
disable complex script features
.TP
\fB\-r\fR
relaxed/less strict validation (where available)
.TP
\fB\-dpi\fR xxx
target resolution in dots per inch (dpi) where xxx is a number
.TP
\fB\-s\fR
for area tree XML, down to block areas only
.TP
\fB\-v\fR
run in verbose mode (currently simply print FOP version and continue)
.TP
\fB\-o\fR [password]
PDF file will be encrypted with option owner password
.TP
\fB\-u\fR [password]
PDF file will be encrypted with option user password
.TP
\fB\-noprint\fR
PDF file will be encrypted without printing permission
.TP
\fB\-nocopy\fR
PDF file will be encrypted without copy content permission
.TP
\fB\-noedit\fR
PDF file will be encrypted without edit content permission
.TP
\fB\-noannotations\fR
PDF file will be encrypted without edit annotation permission
.TP
\fB\-nofillinforms\fR
PDF file will be encrypted without fill in interactive form fields permission
.TP
\fB\-noaccesscontent\fR
PDF file will be encrypted without extract text and graphics permission
.TP
\fB\-noassembledoc\fR
PDF file will be encrypted without assemble the document permission
.TP
\fB\-noprinthq\fR
PDF file will be encrypted without print high quality permission
.TP
\fB\-a\fR
enables accessibility features (Tagged PDF etc., default off)
.TP
\fB\-pdfprofile\fR prof
PDF file will be generated with the specified profile
(Examples for prof: PDF/A\-1b or PDF/X\-3:2003)
.TP
\fB\-conserve\fR
enable memory\-conservation policy (trades memory\-consumption for disk I/O)
(Note: currently only influences whether the area tree is serialized.)
.TP
\fB\-cache\fR
specifies a file/directory path location for the font cache file
.TP
\fB\-flush\fR
flushes the current font cache file
.IP
.SH INPUT
.TP
infile
xsl:fo input file (the same as the next)
(use '\-' for infile to pipe input from stdin)
.TP
\fB\-fo\fR
infile       xsl:fo input file
.TP
\fB\-xml\fR infile
xml input file, must be used together with \fB\-xsl\fR
.TP
\fB\-atin\fR infile
area tree input file
.TP
\fB\-ifin\fR infile
intermediate format input file
.TP
\fB\-imagein\fR infile
image input file (piping through stdin not supported)
.TP
\fB\-xsl\fR stylesheet
xslt stylesheet
.TP
\fB\-param\fR name value <value> to use for parameter <name> in xslt stylesheet
(repeat '\-param name value' for each parameter)
.TP
\fB\-catalog\fR
use catalog resolver for input XML and XSLT files
.IP
.SH OUTPUT
.TP
outfile
input will be rendered as PDF into outfile
(use '\-' for outfile to pipe output to stdout)
.TP
\fB\-pdf\fR outfile
input will be rendered as PDF (outfile req'd)
.TP
\fB\-pdfa1b\fR outfile
input will be rendered as PDF/A\-1b compliant PDF
(outfile req'd, same as "\-pdf outfile \fB\-pdfprofile\fR PDF/A\-1b")
.TP
\fB\-awt\fR
input will be displayed on screen
.TP
\fB\-rtf\fR outfile
input will be rendered as RTF (outfile req'd)
.TP
\fB\-pcl\fR outfile
input will be rendered as PCL (outfile req'd)
.TP
\fB\-ps\fR outfile
input will be rendered as PostScript (outfile req'd)
.TP
\fB\-afp\fR outfile
input will be rendered as AFP (outfile req'd)
.TP
\fB\-tiff\fR outfile
input will be rendered as TIFF (outfile req'd)
.TP
\fB\-png\fR outfile
input will be rendered as PNG (outfile req'd)
.TP
\fB\-txt\fR outfile
input will be rendered as plain text (outfile req'd)
.TP
\fB\-at\fR [mime] out
representation of area tree as XML (outfile req'd)
specify optional mime output to allow the AT to be converted
to final format later
.TP
\fB\-if\fR [mime] out
representation of document in intermediate format XML (outfile req'd)
specify optional mime output to allow the IF to be converted
to final format later
.TP
\fB\-print\fR
input file will be rendered and sent to the printer
see options with "\-print help"
.TP
\fB\-out\fR mime outfile input will be rendered using the given MIME type
(outfile req'd) Example: "\-out application/pdf D:\eout.pdf"
(Tip: "\-out list" prints the list of supported MIME types and exits)
.TP
\fB\-svg\fR outfile
input will be rendered as an SVG slides file (outfile req'd)
Experimental feature \- requires additional fop\-sandbox.jar.
.TP
\fB\-foout\fR outfile
input will only be XSL transformed. The intermediate
XSL\-FO file is saved and no rendering is performed.
(Only available if you use \fB\-xml\fR and \fB\-xsl\fR parameters)
.IP
.SH EXAMPLES
.IP

fop foo.fo foo.pdf

fop \fB\-fo\fR foo.fo \fB\-pdf\fR foo.pdf (does the same as the previous line)

fop \fB\-xml\fR foo.xml \fB\-xsl\fR foo.xsl \fB\-pdf\fR foo.pdf

fop \fB\-xml\fR foo.xml \fB\-xsl\fR foo.xsl \fB\-foout\fR foo.fo

fop \fB\-xml\fR \- \fB\-xsl\fR foo.xsl \fB\-pdf\fR \-

fop foo.fo \fB\-mif\fR foo.mif

fop foo.fo \fB\-rtf\fR foo.rtf

fop foo.fo \fB\-print\fR

fop foo.fo \fB\-awt\fR
.SH HYPHENATION

fop can make use of external hyphenation rules that can be supplied in
the form of a \fBhyphenation jar\fR. You can find such a one at
\fIhttp://offo.sourceforge.net/\fR.

To actually use that, set the \fBFOP_HYPHENATION_PATH\fR environment variable
to the full path of this file, or use configuration files, see below.
.SH "CONFIGURATION FILES"

fop reads two configuration files on startup: \fI/etc/fop.conf\fR and
\fI$HOME/.foprc\fR. These are plain shell script files where you can define
for instance the \fBFOP_HYPHENATION_PATH\fR variable.

Another way to extend is \fIconf.d/\fR files. Simply add a configuration file
into \fI/etc/fop.conf.d/my.conf\fR.
.SH "JAVA-WRAPPERS NOTE"
This program is a shell script wrapper based on \fBjava-wrappers(7)\fR. You
therefore benefit from several features; please see the \fBjava-wrappers(7)\fR
manual page for more information about them.
.SH AUTHOR
Wrapper author: Ola Lundqvist <opal@debian.org>

This manual page was written by Mathieu Malaterre <malat@debian.org>,
for the Debian project (and may be used by others).
.SH "SEE ALSO"
.BR fop-ttfreader(1),
.BR java-wrappers(7).
